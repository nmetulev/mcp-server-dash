[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-server-dash"
version = "0.1.0"
description = "An MCP server exposing Dropbox Dash search and file metadata via stdio."
readme = "README.md"
requires-python = ">=3.10"
license = { text = "Apache-2.0" }
authors = [{ name = "Dropbox, Inc." }]
keywords = ["mcp", "dropbox", "dash", "search", "server"]
dependencies = [
  "mcp>=1.0.0",
  "dropbox>=12.0.2",
  "pydantic>=2.0.0",
  "typing-extensions>=4.0.0",
  "python-dotenv>=1.0.0",
  "httpx>=0.24.0",
]

[project.optional-dependencies]
dev = [
  "ruff>=0.5.0",
  "black>=24.3.0",
  "mypy>=1.8.0",
  "pytest>=8.0.0",
  "pytest-asyncio>=0.23.0",
  "pytest-cov>=5.0.0",
  "respx>=0.20.0",
]

[project.scripts]
mcp-server-dash = "mcp_server_dash:main"

[tool.setuptools]
package-dir = {"" = "src"}
py-modules = ["mcp_server_dash", "dash_api", "renderer", "token_store"]

[tool.black]
line-length = 100
target-version = ["py310"]
skip-string-normalization = false

[tool.ruff]
line-length = 100
target-version = "py310"
extend-exclude = [
  ".venv",
  "build",
  "dist",
]

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "F",   # pyflakes
  "W",   # pycodestyle warnings
  "I",   # isort
  "B",   # flake8-bugbear
  "UP",  # pyupgrade
  "SIM", # flake8-simplify
  "RUF", # ruff-specific
]
ignore = [
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["mcp_server_dash", "dash_api", "renderer", "token_store"]

[tool.mypy]
python_version = "3.10"
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
no_implicit_optional = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = false
disallow_untyped_calls = false
show_error_codes = true
pretty = true
plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_typed = true

[tool.pytest.ini_options]
addopts = "-q --cov=src --cov-report=term-missing"
testpaths = ["tests"]
asyncio_mode = "auto"

[[tool.mypy.overrides]]
module = ["dropbox", "dropbox.*"]
ignore_missing_imports = true
